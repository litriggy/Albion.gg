{"ast":null,"code":"'use strict';\n\nconst Integer = module.exports = require('bindings')('integer.node').Integer;\n\nconst defineStatic = (key, value) => {\n  if (Integer.hasOwnProperty(key)) return;\n  Object.defineProperty(Integer, key, {\n    writable: false,\n    enumerable: true,\n    configurable: false,\n    value: value\n  });\n};\n\nconst alias = (methodName, aliases) => {\n  const method = Integer.prototype[methodName];\n  if (typeof method !== 'function') throw new TypeError('Missing method');\n\n  for (const name of aliases) Integer.prototype[name] = method;\n};\n\ndefineStatic('MAX_VALUE', Integer.fromBits(-1, 0x7fffffff));\ndefineStatic('MIN_VALUE', Integer.fromBits(0, -0x80000000));\ndefineStatic('ZERO', Integer.fromBits(0, 0));\ndefineStatic('ONE', Integer.fromBits(1, 0));\ndefineStatic('NEG_ONE', Integer.fromBits(-1, -1));\nalias('add', ['plus']);\nalias('subtract', ['minus', 'sub']);\nalias('multiply', ['times', 'mul']);\nalias('divide', ['divideBy', 'dividedBy', 'div', 'over']);\nalias('modulo', ['mod']);\nalias('negate', ['neg']);\nalias('abs', ['absoluteValue']);\nalias('shiftLeft', ['shl']);\nalias('shiftRight', ['shr']);\nalias('equals', ['eq', 'isEqualTo']);\nalias('notEquals', ['neq', 'isNotEqualTo', 'doesNotEqual']);\nalias('greaterThan', ['gt', 'isGreaterThan']);\nalias('greaterThanOrEquals', ['gte', 'isGreaterThanOrEqualTo']);\nalias('lessThan', ['lt', 'isLessThan']);\nalias('lessThanOrEquals', ['lte', 'isLessThanOrEqualTo']);\nalias('isNonZero', ['isNotZero']);\nalias('valueOf', ['toNumber']);","map":{"version":3,"sources":["/Users/isanghun/Desktop/albion-web/node_modules/integer/lib/index.js"],"names":["Integer","module","exports","require","defineStatic","key","value","hasOwnProperty","Object","defineProperty","writable","enumerable","configurable","alias","methodName","aliases","method","prototype","TypeError","name","fromBits"],"mappings":"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","sourcesContent":["'use strict';\nconst Integer = module.exports = require('bindings')('integer.node').Integer;\n\nconst defineStatic = (key, value) => {\n\tif (Integer.hasOwnProperty(key)) return;\n\tObject.defineProperty(Integer, key, {\n\t\twritable: false,\n\t\tenumerable: true,\n\t\tconfigurable: false,\n\t\tvalue: value,\n\t});\n};\n\nconst alias = (methodName, aliases) => {\n\tconst method = Integer.prototype[methodName];\n\tif (typeof method !== 'function') throw new TypeError('Missing method');\n\tfor (const name of aliases) Integer.prototype[name] = method;\n};\n\n\ndefineStatic('MAX_VALUE', Integer.fromBits(-1, 0x7fffffff));\ndefineStatic('MIN_VALUE', Integer.fromBits(0, -0x80000000));\ndefineStatic('ZERO', Integer.fromBits(0, 0));\ndefineStatic('ONE', Integer.fromBits(1, 0));\ndefineStatic('NEG_ONE', Integer.fromBits(-1, -1));\n\nalias('add', ['plus']);\nalias('subtract', ['minus', 'sub']);\nalias('multiply', ['times', 'mul']);\nalias('divide', ['divideBy', 'dividedBy', 'div', 'over']);\nalias('modulo', ['mod']);\nalias('negate', ['neg']);\nalias('abs', ['absoluteValue']);\nalias('shiftLeft', ['shl']);\nalias('shiftRight', ['shr']);\nalias('equals', ['eq', 'isEqualTo']);\nalias('notEquals', ['neq', 'isNotEqualTo', 'doesNotEqual']);\nalias('greaterThan', ['gt', 'isGreaterThan']);\nalias('greaterThanOrEquals', ['gte', 'isGreaterThanOrEqualTo']);\nalias('lessThan', ['lt', 'isLessThan']);\nalias('lessThanOrEquals', ['lte', 'isLessThanOrEqualTo']);\nalias('isNonZero', ['isNotZero']);\nalias('valueOf', ['toNumber']);\n"]},"metadata":{},"sourceType":"script"}